<launch>
	<rosparam file="$(find robotican_hardware_interface)/config/ric_board_example.yaml" command="load"/>
	<node name="robotican_hardware_interface" pkg="robotican_hardware_interface" type="robotican_hardware_interface_node" respawn="true" output="screen" respawn_delay="5">
	</node>
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find robotican_armadillo)/description/models/armadillo.xacro'" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
	<rosparam file="$(find robotican_hardware_interface)/config/controllers.yaml" command="load"/>
	
	<arg name="have_close_loop_motor" default="true" />
	<arg name="have_open_loop_motor" default="false" />
	<arg name="have_close_loop_position_motor" default="true" />
	
	<param name="have_close_loop_motor" value="$(arg have_close_loop_motor)" />
	<param name="have_open_loop_motor" value="$(arg have_open_loop_motor)" />
	<param name="have_close_loop_position_motor" value="$(arg have_close_loop_position_motor)" />
	<param name="have_battery" value="false" />
	<param name="have_ultrasonic" value="false" />
    
<!--
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true" respawn_delay="5" output="screen" args="
      robot_state_controller
      left_motor_controller
      right_motor_controller
	  " />
-->



    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="true" respawn_delay="5" output="screen" args="robot_state_controller " />
    
    <group unless="$(arg have_open_loop_motor)">
		<group if="$(arg have_close_loop_motor)">
			<node name="mobile_base_spawner" pkg="controller_manager" type="spawner" respawn="true" respawn_delay="5" output="screen" args="mobile_base_controller" />
		</group>
    </group>
    <group unless="$(arg have_close_loop_motor)">
		<group if="$(arg have_open_loop_motor)">
			<node name="mobile_base_spawner" pkg="controller_manager" type="spawner" respawn="true" respawn_delay="5" output="screen" args="mobile_base_controller" />
		</group>
    </group>
    
    <group if="$(arg have_close_loop_position_motor)">
		<node name="torso_controller_spawner" pkg="controller_manager" type="spawner" respawn="true" respawn_delay="5" output="screen" args="torso_position_controller" />
    </group>

	

</launch>
